{"version":3,"sources":["editable-stuff/CV-Europass-Pimpinella-IT.pdf","editable-stuff/avatar.png","components/home/MainBody.jsx","components/home/AboutMe.jsx","components/home/SkillCard.jsx","components/home/Skills.jsx","components/Footer.jsx","components/Navbar.jsx","components/home/ExperienceCard.jsx","components/home/Experiences.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","MainBody","useState","Array","icons","length","fill","hoverstatus","setHoverstatus","toggleHover","data","newhoverStatus","event","icon","id","className","FirstName","MiddleName","LastName","devDesc","map","key","target","rel","href","url","aria-label","image","split","onMouseOver","onMouseOut","role","AboutMe","avatar","instaProfilePic","showProfilePic","showInsta","Pdf","resumeURL","src","alt","aboutHeading","aboutDescription","SkillCard","value","class","Skills","skills","skillsArray","skill","Footer","backgroundColor","bgStyle","style","Navbar","props","isTop","setIsTop","useEffect","document","addEventListener","istop","window","scrollY","type","data-toggle","data-target","aria-controls","aria-expanded","Language","language","ExperienceCard","name","company","description","competences","date","Experiences","experiences","experiencesArray","experiece","Home","App","basename","showNavigationbar","path","exact","component","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f74efb12.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/CV-Europass-Pimpinella-IT.8f791f5d.pdf\";","module.exports = __webpack_public_path__ + \"static/media/avatar.1be88748.png\";","import React, { useState } from \"react\";\nimport Typist from \"react-typist\";\nimport {\n  FirstName,\n  LastName,\n  MiddleName,\n  devDesc,\n  icons,\n} from \"../../editable-stuff/configurations.json\";\n\nconst MainBody = () => {\n  // const [backgroundType, setBackgroundType] = useState(Configs.backgroundType);\n  const [hoverstatus, setHoverstatus] = useState(\n    new Array(icons.length).fill(\"socialicons\")\n  );\n\n  const toggleHover = (data) => {\n    const newhoverStatus = [...hoverstatus];\n\n    if (data.event === \"enter\") {\n      newhoverStatus[data.icon.id] = \"socialiconshover\";\n      return setHoverstatus(newhoverStatus);\n    } else if (data.event === \"leave\") {\n      newhoverStatus[data.icon.id] = \"socialicons\";\n      return setHoverstatus(newhoverStatus);\n    }\n  };\n\n  return (\n    <div>\n      <div\n        id=\"home\"\n        className=\"title jumbotron jumbotron-fluid bg-transparent bgstyle text-light min-vh-100 d-flex align-content-center align-items-center flex-wrap m-0\"\n      >\n        <div id=\"stars\"></div>\n        <div className=\"container container-fluid text-center \">\n          <h1 className=\"display-1\">\n            {FirstName + \" \" + MiddleName + \" \" + LastName}\n          </h1>\n          <Typist className=\"lead\"> {devDesc}</Typist>\n          <div className=\"p-5\">\n            {icons.map((icon) => (\n              <a\n                key={icon.id}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                href={icon.url}\n                aria-label={`My ${icon.image.split(\"-\")[1]}`}\n              >\n                <i\n                  className={`fab ${icon.image}  fa-3x ${hoverstatus[icon.id]}`}\n                  onMouseOver={() => toggleHover({ icon, event: \"enter\" })}\n                  onMouseOut={() => toggleHover({ icon, event: \"leave\" })}\n                />\n              </a>\n            ))}\n          </div>\n          <a\n            className=\"btn btn-outline-light btn-lg\"\n            href=\"#aboutme\"\n            role=\"button\"\n            aria-label=\"Learn more about me\"\n          >\n            More about me\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default MainBody;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Pdf from \"../../editable-stuff/CV-Europass-Pimpinella-IT.pdf\";\nimport avatar from \"../../editable-stuff/avatar.png\"\nimport {\n  aboutHeading,\n  aboutDescription,\n  showProfilePic\n} from \"../../editable-stuff/configurations.json\";\n\nconst AboutMe = () => {\n  const [instaProfilePic] = useState(avatar);\n  const [showInsta] = useState(showProfilePic);\n  const [resumeURL] = useState(Pdf);\n\n  return (\n    <div id=\"aboutme\" className=\"jumbotron jumbotron-fluid m-0\">\n      <div className=\"container container-fluid p-5\">\n        <div className=\"row\">\n          {showInsta && (\n            <div className=\"col-5 d-none d-lg-block align-self-center\">\n              <img\n                className=\"border border-secondary rounded-circle\"\n                src={instaProfilePic}\n                alt=\"profilepicture\"\n              />\n            </div>\n          )}\n          <div className={`col-lg-${showInsta ? \"7\" : \"12\"}`}>\n            <h1 className=\"display-4 mb-5 text-center\">{aboutHeading}</h1>\n            <p className=\"lead text-center\">{aboutDescription}</p>\n            {resumeURL && (\n              <p className=\"lead text-center\">\n                <a\n                  className=\"btn btn-outline-dark btn-lg\"\n                  href={Pdf}\n                  target=\"_blank\"\n                  rel=\"noreferrer noopener\"\n                  role=\"button\"\n                  aria-label=\"Resume/CV\"\n                >\n                  Curriculum Vitae\n                </a>\n              </p>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AboutMe;\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport axios from \"axios\";\n\nconst SkillCard = ({ value }) => {\n  \n  return (\n    <div className=\"col-md-2\">\n      <div className=\"card shadow-lg p-2 mb-1 bg-white rounded\">        \n          <p class=\"text-center\">{value} </p>          \n      </div>\n    </div>\n  );\n};\n\nexport default SkillCard;\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport axios from \"axios\";\nimport SkillCard from \"./SkillCard\";\nimport {\n  skills\n} from \"../../editable-stuff/configurations.json\";\n\nconst Skills = () => {\n  const [skillsArray] = useState(skills);\n\n  return (\n    <div id=\"skills\" className=\"jumbotron jumbotron-fluid bg-transparent m-0\">\n      {skillsArray.length && (\n        <div className=\"container container-fluid p-5\">\n          <h1 className=\"display-4 pb-5\">Skills</h1>\n          <div className=\"row\">\n            {skillsArray.map((skill) => (\n              <SkillCard value={skill} />\n            ))}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Skills;\n","import React, { useState } from \"react\";\n\nconst Footer = () => {\n  const [bgStyle] = useState({ backgroundColor: \"#f5f5f5\" });\n\n  return (\n    <footer style={bgStyle} className=\"mt-auto py-3 text-center\">\n      {/* <strong> &copy; 2019 </strong>*/}\n      <i className=\"fas fa-code\"></i> with <i className=\"fas fa-heart\"></i> by{\" \"}\n      <a\n        className=\"badge badge-dark\"\n        rel=\"noopener\"\n        href=\"https://github.com/enzo88\"\n        aria-label=\"My GitHub\"\n      >\n        Vincenzo Pimpinella\n      </a>{\" \"}\n      using <i className=\"fab fa-react\"></i>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Pdf from \"../editable-stuff/CV-Europass-Pimpinella-IT.pdf\";\nimport { showBlog, FirstName } from \"../editable-stuff/configurations.json\";\n\nconst Navbar = (props) => {\n  const [isTop, setIsTop] = useState(true);\n  useEffect(() => {\n    document.addEventListener(\"scroll\", () => {\n      const istop = window.scrollY < 200;\n      if (istop !== isTop) {\n        setIsTop(istop);\n      }\n    });\n  }, [isTop]);\n\n  return (\n    <nav\n      className={`navbar navbar-expand-lg fixed-top navbar-light ${\n        isTop ? \"bg-transparent\" : \"bg-gradient\"\n        } `}\n    >\n      <a className=\"navbar-brand\" href={process.env.PUBLIC_URL + \"/#home\"}>\n        {`<${FirstName} />`}\n      </a>\n      <button\n        className=\"navbar-toggler\"\n        type=\"button\"\n        data-toggle=\"collapse\"\n        data-target=\"#navbarTogglerDemo02\"\n        aria-controls=\"navbarTogglerDemo02\"\n        aria-expanded=\"false\"\n        aria-label=\"Toggle navigation\"\n      >\n        <span className=\"navbar-toggler-icon\"></span>\n      </button>\n\n      <div className=\"collapse navbar-collapse\" id=\"navbarTogglerDemo02\">\n        <ul className=\"navbar-nav mr-auto mt-2 mt-lg-0\">\n          <li className=\"nav-item\">\n            <a\n              className=\"nav-link lead\"\n              href={process.env.PUBLIC_URL + \"/#aboutme\"}\n            >\n              <b>About</b>\n            </a>\n          </li>\n          <li className=\"nav-item\">\n            <a\n              className=\"nav-link lead\"\n              href={Pdf}\n              target=\"_blank\"\n              rel=\"noreferrer noopener\"\n            >\n              <b>CV</b>\n            </a>\n          </li>\n          <li className=\"nav-item\">\n            <a\n              className=\"nav-link lead\"\n              href={process.env.PUBLIC_URL + \"/#experiences\"}\n            >\n              <b>Experiences</b>\n            </a>\n          </li>\n          <li className=\"nav-item\">\n            <a\n              className=\"nav-link lead\"\n              href={process.env.PUBLIC_URL + \"/#skills\"}\n            >\n              <b>Skills</b>\n            </a>\n          </li>\n        </ul>\n      </div>\n    </nav>\n  );\n};\n\nexport default Navbar;\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport axios from \"axios\";\n\nconst ExperienceCard = ({ value }) => {\n  return (\n    <div className=\"col-md-6\">\n      <div className=\"card shadow-lg p-3 mb-5 bg-white rounded\">        \n        <div className=\"card-body\">\n          <h5 className=\"card-title\">{value.name} - {value.company}</h5>\n          <p className=\"card-text\">{value.description} </p>         \n          <hr />\n          <Language value={value.competences}></Language>\n          <p className=\"card-text\">            \n            <small className=\"text-muted\">{value.date}</small>\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst Language = ({ value }) => {\n  return (\n    <div className=\"pb-3\">\n      Competences:{\" \"}\n      {value.map((language) => (\n        <p key={language} className=\"badge badge-light card-link\">{language}</p>\n      ))}\n    </div>\n  );\n};\n\nexport default ExperienceCard;\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport axios from \"axios\";\nimport ExperienceCard from \"./ExperienceCard\";\nimport {\n  experiences\n} from \"../../editable-stuff/configurations.json\";\n\nconst Experiences = () => {\n  const [experiencesArray] = useState(experiences);\n\n  return (\n    <div id=\"experiences\" className=\"jumbotron jumbotron-fluid bg-transparent m-0\">\n      {experiencesArray.length && (\n        <div className=\"container container-fluid p-5\">\n          <h1 className=\"display-4 pb-5\">Experiences</h1>\n          <div className=\"row\">\n            {experiencesArray.map((experiece) => (\n              <ExperienceCard value={experiece} />\n            ))}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Experiences;\n","import React, { Fragment } from \"react\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"bootstrap/dist/js/bootstrap.bundle.min\";\nimport \"./App.css\";\nimport {\n  showNavigationbar\n} from \"./editable-stuff/configurations.json\";\nimport MainBody from \"./components/home/MainBody\";\nimport AboutMe from \"./components/home/AboutMe\";\nimport Skills from \"./components/home/Skills\";\nimport Footer from \"./components/Footer\";\nimport Navbar from \"./components/Navbar\";\nimport Experiences from \"./components/home/Experiences\";\n\nconst Home = () => {\n  return (\n    <Fragment>\n      <MainBody />\n      <AboutMe />\n      <Experiences />\n      <Skills />\n    </Fragment>\n  );\n};\n\nconst App = () => (\n  <BrowserRouter basename={process.env.PUBLIC_URL + \"/\"}>\n    {showNavigationbar && <Navbar />}\n    <Route path=\"/\" exact component={Home} />\n    <Footer />\n  </BrowserRouter>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let\"s check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can\"t reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}